@mixin burger {
    z-index: 15;
    display: block;
    position: relative;
    width: 30px;
    height: 15px;
    border: none;
    background: none;
    cursor: pointer;

    &::before,
    &::after {
        content: "";
    }

    & span {
        width: 100%;
        right: 0;
        top: 50%;
        transform: translate(0px, -50%);
    }

    &::before {
        width: 60%;
        right: 0;
        top: 0;
    }

    &::after {
        width: 30%;
        right: 0;
        bottom: 0;
    }

    & span,
    &::before,
    &::after {
        position: absolute;
        height: 10%;
        transition: all 0.3s ease 0s;
        background: #222;
        border-radius: 5px;
    }

    &._active {
        &::before {
            width: 100%;
        }

        & span {
            width: 50%;
        }

        &::after {
            width: 70%;
        }
    }
}

@mixin adaptive-value($property, $startSize, $minSize, $type) {
    $addSize: $startSize - $minSize;
    @if $type == 1 {
        #{$property}: $startSize + px;
        @media (max-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
        }
    }
    @else if $type == 2 {
        #{$property}: $startSize + px;
        @media (min-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - $maxWidthContainer}));
        }
    }
    @else {
        #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
}